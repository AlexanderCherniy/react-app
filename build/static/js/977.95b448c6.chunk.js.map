{"version":3,"file":"static/js/977.95b448c6.chunk.js","mappings":"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","sources":["webpack://react-first/./src/components/Massages/Massages.module.css?6c3d","components/Massages/Massages.jsx","components/Massages/MassagesContainer.jsx","noc/noc.js","redux/reselects.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"massages\":\"Massages_massages__KJ3rg\",\"users\":\"Massages_users__8DBYp\",\"user\":\"Massages_user__uc5ec\",\"activeUser\":\"Massages_activeUser__0TVNk\",\"online\":\"Massages_online__VpgBU\",\"userName\":\"Massages_userName__09NEo\",\"userMassages\":\"Massages_userMassages__7w09D\",\"massage\":\"Massages_massage__zP+40\",\"container\":\"Massages_container__jZmZH\",\"formsContainer\":\"Massages_formsContainer__EleLG\",\"textarea\":\"Massages_textarea__wh4TM\",\"button\":\"Massages_button__nYyEA\"};","import mClas from './Massages.module.css'\r\nimport React from \"react\";\r\nimport { Navigate } from 'react-router-dom';\r\nlet Massages = props => {\r\n    let createRef = React.createRef()\r\n    let createPost = () => {\r\n        props.createPost()\r\n    }\r\n    let massageChange = () => {\r\n        let text = createRef.current.value\r\n        props.massageChange(text)\r\n    }\r\n    return (\r\n        <main className={mClas.massages}>\r\n            <div className={mClas.container}>\r\n                <div className={mClas.users}>\r\n                    {props.shortUsers}\r\n                </div>\r\n                <div className={mClas.userMassages}>\r\n                    <div className={mClas.massage}>\r\n                        {props.shortMassages}\r\n                    </div>\r\n                    <div className={mClas.formsContainer}>\r\n                        <textarea placeholder='Напишите сообщение...' className={mClas.textarea}\r\n                            ref={createRef} onChange={massageChange} value={props.newMassageText} />\r\n                        <button className={mClas.button} onClick={createPost} type='send'>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\nexport default Massages;","import { NavLink } from 'react-router-dom';\r\nimport mClas from './Massages.module.css'\r\nimport React from \"react\";\r\nimport { massageChangeActionCreator, massageActionCreator } from '../../redux/massages-reducer'\r\nimport Massages from './Massages';\r\nimport { connect } from 'react-redux';\r\nimport AnonimGoLogin from '../../noc/noc'\r\nimport { compose } from 'redux';\r\nimport { getMassages } from '../../redux/reselects';\r\nconst Users = props => {\r\n    let online = props.online\r\n    online === 'true' ? online = '#81b53e' : online = '#f0ad4e'\r\n    return (\r\n        <div className={mClas.user}>\r\n            <NavLink to={'/massages/' + props.userId} className={link => link.isActive ? mClas.activeUser : mClas.user}>\r\n                <img src={props.userPhoto} alt=\"\" />\r\n                {props.userName}\r\n                <div style={{ background: online }} className={mClas.online}></div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\nconst UsersMassages = props => {\r\n    return (\r\n        <div className={mClas.massage}>\r\n            {props.massage}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        shortUsers: state.massagesPage.users.map(user => <Users key={user.userId} online={user.online}\r\n            userPhoto={user.userPhoto} userId={user.userId} userName={user.userName} />),\r\n        shortMassages: getMassages(state).map(massage => <UsersMassages key={massage.Id} massage={massage.massage} />),\r\n        newMassageText: state.massagesPage.newMassageText,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createPost: () => {\r\n            dispatch(massageActionCreator())\r\n        },\r\n        massageChange: (text) => {\r\n            dispatch(massageChangeActionCreator(text))\r\n        }\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), AnonimGoLogin)(Massages);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\n\r\nconst AnonimGoLogin = (WrappedComponent)=>{\r\n    const mapAnonimStateToProps = state=>{\r\n        return{\r\n            isAuth: state.auth.isAuth\r\n        } \r\n    }\r\n    const HOC = (props)=>{\r\n        if(!props.isAuth) return <Navigate to='/login'/>\r\n        return <WrappedComponent {...props}/>\r\n    }\r\n    return connect(mapAnonimStateToProps)(HOC)\r\n}\r\nexport default AnonimGoLogin","import { createSelector } from \"reselect\"\r\n\r\nexport const getUsersSelecor = (state)=>{\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelecor, (users)=>{\r\n    return users.filter(user=> user.name !== 'karas518')\r\n})\r\n\r\nexport const getMassagesSelector = (state)=>{\r\n    return state.massagesPage.massages\r\n}\r\nexport const getMassages = createSelector(getMassagesSelector,(massages)=>{\r\n    return massages\r\n})\r\n\r\nexport const getMyUserProfileSelector = (state)=>{\r\n    return state.profilePage.profile\r\n}\r\n\r\nexport const getMyUserProfile = createSelector(getMyUserProfileSelector, (myProfile)=>{\r\n    return myProfile\r\n})","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["props","createRef","React","className","mClas","shortUsers","shortMassages","placeholder","ref","onChange","text","current","value","massageChange","newMassageText","onClick","createPost","type","Users","online","to","userId","link","isActive","src","userPhoto","alt","userName","style","background","UsersMassages","massage","compose","connect","state","massagesPage","users","map","user","getMassages","Id","dispatch","massageActionCreator","massageChangeActionCreator","AnonimGoLogin","Massages","WrappedComponent","isAuth","auth","getUsers","createSelector","usersPage","filter","name","massages","getMyUserProfile","profilePage","profile","myProfile","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations"],"sourceRoot":""}