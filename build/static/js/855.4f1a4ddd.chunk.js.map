{"version":3,"file":"static/js/855.4f1a4ddd.chunk.js","mappings":"6SAUaA,EAA0D,SAAC,GAA2D,EAA1DC,MAA0D,EAApDC,KAAoD,EAA9CC,YAA8C,EAAjCC,UAAkC,IAAvBC,EAAsB,EAAtBA,UAAsB,YAC/H,OACI,iBAAKD,UAAWE,EAAAA,EAAAA,kBAAhB,UACKD,GACD,SAAC,KAAD,CAAcD,UAAWE,EAAAA,EAAAA,WAAqBC,KAAMF,EAASG,MAAMD,KAAME,UAAW,YAInFC,EAAoD,SAAC,GAAc,IAAVF,EAAS,oBAE3E,OAAO,SAACR,GAAD,kBAAoBQ,GAApB,cAA4B,uCAAcA,EAAMP,OAAWO,QAEzDG,EAAiD,SAAC,GAAc,IAAVH,EAAS,oBACxE,OAAO,SAACR,GAAD,kBAAoBQ,GAApB,cAA4B,oCAAWA,EAAMP,OAAWO,QAE5D,SAASI,EAA+BR,EAAkBG,EAAgBE,EACrDN,EAAsBU,GAC9C,OAAO,SAAC,KAAD,CAAOT,UAAWA,EAAWK,UAAWA,EAAWN,YAAaA,EAAaU,KAAMA,EAAMN,KAAMA,M,iNC1B1G,EAAgF,8BAAhF,EAA+H,8BAA/H,EAA0K,0BAA1K,EAAiN,0B,+BC6EjN,EAxDkC,SAAC,GAAkC,IAAhCO,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,MAAUP,GAAY,YAWhE,OAA4B,MAAxBA,EAAMQ,SAASC,OAAyC,MAAxBT,EAAMQ,SAASE,OACxC,SAAC,KAAD,CAAUC,GAAI,cAElB,SAAC,KAAD,CAAQC,cATmB,CAC9BF,MAAO,GACPG,UAAW,GACXP,QAAS,GACTQ,YAAY,GAMZC,SAAUC,EAAAA,GACVC,SAAQ,mCAAE,WAAMC,GAAN,uFACaC,EAAAA,GAAAA,aAAqBD,EAAOR,MAAOQ,EAAOL,UAAWK,EAAOJ,WAAYI,EAAOZ,SAD5F,OAEkB,KADlBc,EADA,QAEGC,WACLC,OAAOC,SAASC,UAGQ,KAApBJ,EAAKC,YACLrB,EAAMyB,aAEVzB,EAAM0B,SAASN,EAAKO,SAAS,KAT3B,2CAAF,sDAFL,UAcH,UAAC,KAAD,YACI,0BACI,SAAC,KAAD,CAAO/B,UAAWgC,EAAkB3B,UAAWE,EAAAA,GAAOR,YAAY,QAAQI,KAAK,aAEnF,0BACI,SAAC,KAAD,CAAOH,UAAWgC,EAAkB3B,UAAWE,EAAAA,GAAOJ,KAAK,YAAYJ,YAAY,gBAEvF,0BACI,mBAAOC,UAAWgC,EAAlB,0BACgB,SAAC,KAAD,CAAO3B,UAAWE,EAAAA,GAAOJ,KAAK,aAAaM,KAAK,mBAGpE,2BACiB,OAAZC,GAEG,iBAAKV,UAAWE,EAAAA,EAAAA,iBAAhB,WACI,SAAC,KAAD,CAAOF,UAAWgC,EAAkB3B,UAAWE,EAAAA,GAAOJ,KAAK,UAAUJ,YAAY,aACjF,gBAAKC,UAAWgC,EAAcC,IAAKvB,EAASwB,IAAI,eAGpD,IAEJ,mBAAQlC,UAAWgC,EAAcG,OAhDzB,WAChB/B,EAAM0B,SAAS,OA+C+CrB,KAAK,SAA3D,qBACW,OAAVE,EAAiB,IAAK,gBAAKX,UAAWE,EAAAA,EAAAA,WAAhB,SAAsCS,aClE7E,EANc,SAAAP,GACV,OAAO,4BACH,gBAAKJ,UAAU,QAAf,oBACA,SAAC,GAAD,UAAeI,Q,UCavB,GAAegC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KARkB,SAACC,GACnB,MAAO,CACH1B,SAAU0B,EAAMC,KAChB5B,MAAO2B,EAAMC,KAAK5B,MAClBD,QAAS4B,EAAMC,KAAK7B,WAIC,CAAEoB,SAAUU,EAAAA,GAAAA,SAAkBX,WAAAA,EAAAA,KAD3D,EAXuB,SAAAzB,GACnB,OAAO,SAAC,GAAD,UAAYA,Q,sGCIhB,IAAMqC,EAA8C,SAACnB,GAC1D,IAAMoB,EAAyB,GAM/B,OALKpB,EAAOqB,QAEDrB,EAAOqB,QAAQC,OAAS,KACjCF,EAAOC,QAAU,kCAFjBD,EAAOC,QAAU,SAIZD,GAaItB,EAAiD,SAACE,GAC7D,IAAMoB,EAA0B,GAahC,OAZKpB,EAAOR,MAEDQ,EAAOR,MAAM8B,OAAS,KAC/BF,EAAO5B,MAAQ,iCAFf4B,EAAO5B,MAAQ,iBAKZQ,EAAOL,UAEDK,EAAOL,UAAU2B,OAAS,KACnCF,EAAOzB,UAAY,iCAFnByB,EAAOzB,UAAY,oBAKdyB,GAcIG,EAAqD,SAACvB,GACjE,IAAMoB,EAA4B,GAC9BpB,EAAOwB,QAAQF,OAAS,KAC1BF,EAAOI,QAAU,iCAEfxB,EAAOyB,SAASH,OAAS,KAC3BF,EAAOK,SAAW,iCAEhBzB,EAAO0B,0BAA0BJ,OAAS,KAC5CF,EAAOM,0BAA4B,iCAErC,IAAMC,EAASC,OAAO5B,OAAOA,EAAO6B,UAAUC,QAAO,SAACC,GAAD,OAAeA,EAAKT,OAAS,MAKlF,OAJIK,EAAOL,OAAS,IAClBF,EAAOY,eAAP,oBAAqCL,EAArC,eAGKP,I,mBC1ET,KAAgB,MAAQ,qBAAqB,UAAY,yBAAyB,MAAQ,qBAAqB,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,qBAAqB,YAAc,2BAA2B,UAAY,yBAAyB,WAAa,0BAA0B,kBAAoB,iCAAiC,eAAiB,8BAA8B,cAAgB,6BAA6B,WAAa","sources":["Forms/Forms.tsx","webpack://react-first/./src/components/Login/Login.module.scss?4086","components/Login/LoginForm.tsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","validate/validate.ts","webpack://react-first/./src/components/Profile/Posts/Posts.module.scss?d335"],"sourcesContent":["import {ErrorMessage, Field, FieldProps} from 'formik';\r\nimport incClass from '../components/Profile/Posts/Posts.module.scss'\r\ntype MyProps = {\r\n    placeholder: string | undefined\r\n    className: string\r\n    children?: any\r\n    form: FieldProps<any,any> | any//сделай так чтобы позже чтобы any не было\r\n}\r\ntype ValidComponentArgType<V,FormValue> = FieldProps<V,FormValue> & MyProps;\r\n\r\nexport const ValidComponent:React.FC<ValidComponentArgType<any,any>> = ({field,form, placeholder, className, children, ...props})=>{\r\n    return(\r\n        <div className={incClass.postFlexContainer}>\r\n            {children}\r\n            <ErrorMessage className={incClass.errorLogin} name={children.props.name} component={'div'}/>\r\n        </div>\r\n    )\r\n}\r\nexport const Textarea:React.FC<ValidComponentArgType<any,any>> = ({...props})=>{ //короче надо убрать field и form\r\n    // из значений функции textarea, чтобы в props`ax оказались field и form, подумай как сделать\r\n    return <ValidComponent {...props} ><textarea {...props.field} {...props}/></ValidComponent>\r\n} \r\nexport const Input:React.FC<ValidComponentArgType<any,any>> = ({...props})=>{\r\n    return <ValidComponent {...props} ><input {...props.field} {...props}/></ValidComponent>\r\n} \r\nexport function createField<NameType = string>(className:string, name: NameType, component: React.FC<ValidComponentArgType<any,any>> ,\r\n                            placeholder?: string ,type?: string  ){\r\n    return <Field className={className} component={component} placeholder={placeholder} type={type} name={name} />\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formsContainer\":\"Login_formsContainer__c0OFT\",\"loginInputForm\":\"Login_loginInputForm__aPVMD\",\"rememberMeForm\":\"Login_rememberMeForm__4Xpb8\",\"sendButton\":\"Login_sendButton__93dTe\",\"captchaImg\":\"Login_captchaImg__njlW+\"};","import { Form, Field, Formik } from \"formik\"\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { AuthApi } from \"../../api/api-dal\"\r\nimport { Input } from \"../../Forms/Forms\";\r\nimport { dataType } from \"../../redux/auth-reducer\";\r\nimport { validateLogin } from \"../../validate/validate\";\r\nimport incClass from '../Profile/Posts/Posts.module.scss';\r\nimport c from './Login.module.scss';\r\n\r\ntype Props = {\r\n    captcha: string | null\r\n    error: string | null\r\n    userData: dataType\r\n    getCaptcha: ()=> void\r\n    setError: (error: string | null)=> void\r\n}\r\nexport type FormValues = {\r\n    login: string,\r\n    passoword: string,\r\n    captcha: string,\r\n    remebmerMe: boolean\r\n}\r\nconst LoginForm:React.FC<Props> = ({ captcha, error, ...props }) => {\r\n    \r\n    const deleteError = () => {\r\n        props.setError(null);\r\n    }\r\n    const initialValues: FormValues = {\r\n        login: '',\r\n        passoword: '',\r\n        captcha: '',\r\n        remebmerMe: false\r\n    }\r\n    if (props.userData.email != null && props.userData.login != null) {\r\n        return <Navigate to={'/profile'} />\r\n    }\r\n    return <Formik initialValues={initialValues}\r\n        validate={validateLogin}\r\n        onSubmit={async values => {\r\n            const data = await AuthApi.loginService(values.login, values.passoword, values.remebmerMe, values.captcha)\r\n            if (data.resultCode === 0) {\r\n                window.location.reload()\r\n            }\r\n            else {\r\n                if (data.resultCode === 10) {\r\n                    props.getCaptcha()\r\n                }\r\n                props.setError(data.messages[0]);\r\n            }\r\n        }}>\r\n        <Form>\r\n            <div>\r\n                <Field className={c.loginInputForm} component={Input} placeholder=\"Login\" name=\"login\" />\r\n            </div>\r\n            <div>\r\n                <Field className={c.loginInputForm} component={Input} name=\"passoword\" placeholder=\"Password\" />\r\n            </div>\r\n            <div>\r\n                <label className={c.rememberMeForm}>\r\n                    RememberMe? <Field component={Input} name=\"remebmerMe\" type='checkbox' />\r\n                </label>\r\n            </div>\r\n            <div>\r\n                {captcha !== null\r\n                    ?\r\n                    <div className={incClass.captchaContainer}>\r\n                        <Field className={c.loginInputForm} component={Input} name=\"captcha\" placeholder=\"Captcha\" />\r\n                        <img className={c.captchaImg} src={captcha} alt=\"Captcha\" />\r\n                    </div>\r\n                    :\r\n                    \"\"\r\n                }\r\n                <button className={c.sendButton} onBlur={deleteError} type=\"submit\">GO FORM</button>\r\n                {error === null ? \"\" : <div className={incClass.errorLogin}>{error}</div>}\r\n            </div>\r\n        </Form>\r\n    </Formik>\r\n}\r\nexport default LoginForm","import LoginForm from \"./LoginForm\";\r\nconst Login = props => {\r\n    return <div>\r\n        <div className=\"title\">LOGIN</div>\r\n        <LoginForm {...props} />\r\n    </div>\r\n}\r\nexport default Login","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport Login from \"./Login\";\r\nimport { actions } from '../../redux/auth-reducer'\r\nimport { getCaptcha } from \"../../redux/auth-reducer\";\r\nconst LoginContainer = props => {\r\n    return <Login  {...props} />\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.auth,\r\n        error: state.auth.error,\r\n        captcha: state.auth.captcha\r\n    }\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps, { setError: actions.setError, getCaptcha })\r\n)(LoginContainer)\r\n","import { ProfileContactsType } from \"../api/api-dal\"\r\n\r\ntype validateType<T> = (values: T) => {}\r\n\r\ntype validatePostType = {\r\n  newPost: string\r\n}\r\ntype errorsPostType = {\r\n  newPost?: string\r\n}\r\n\r\nexport const validatePost:validateType<validatePostType> = (values) => {\r\n  const errors: errorsPostType = {};\r\n  if (!values.newPost) {\r\n    errors.newPost = 'error!';\r\n  } else if (values.newPost.length > 50) {\r\n    errors.newPost = 'Must be 50 characters or less!';\r\n  }\r\n  return errors;\r\n};\r\n\r\ntype validateLoginType = {\r\n  captcha: string\r\n  login: string\r\n  passoword: string\r\n  remebmerMe: boolean\r\n}\r\ntype errorsLoginType = {\r\n  login?: string\r\n  passoword?: string\r\n}\r\nexport const validateLogin: validateType<validateLoginType> = (values) => {\r\n  const errors: errorsLoginType = {};\r\n  if (!values.login) {\r\n    errors.login = 'Login Request!';\r\n  } else if (values.login.length > 30) {\r\n    errors.login = 'Must be 30 characters or less';\r\n  }\r\n\r\n  if (!values.passoword) {\r\n    errors.passoword = 'Password Request!';\r\n  } else if (values.passoword.length > 20) {\r\n    errors.passoword = 'Must be 20 characters or less';\r\n  }\r\n\r\n  return errors;\r\n};\r\ntype validateProfileType = {\r\n  aboutMe: string\r\n  fullName: string\r\n  lookingForAJobDescription: string\r\n  contacts: ProfileContactsType\r\n}\r\ntype errorsProfileType = {\r\n  aboutMe?: string\r\n  fullName?: string\r\n  lookingForAJobDescription?: string\r\n  someUrlIsWrong?: string\r\n}\r\nexport const validateProfile:validateType<validateProfileType> =  (values) => {\r\n  const errors: errorsProfileType = {};\r\n  if (values.aboutMe.length > 65) {\r\n    errors.aboutMe = 'Must be 65 characters or less';\r\n  }\r\n  if (values.fullName.length > 30) {\r\n    errors.fullName = 'Must be 30 characters or less';\r\n  }\r\n  if (values.lookingForAJobDescription.length > 50) {\r\n    errors.lookingForAJobDescription = 'Must be 50 characters or less';\r\n  }\r\n  const bigURL = Object.values(values.contacts).filter((item: any) => item.length > 50)\r\n  if (bigURL.length > 0) {\r\n    errors.someUrlIsWrong = `Some URL (${bigURL}) Is Wrong`\r\n  }\r\n\r\n  return errors;\r\n};","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Posts_posts__YJ7uB\",\"container\":\"Posts_container__vc4F3\",\"title\":\"Posts_title__UICKL\",\"cross\":\"Posts_cross__V6vMY\",\"form\":\"Posts_form__zIL9X\",\"forms\":\"Posts_forms__uBc3I\",\"flexReverse\":\"Posts_flexReverse__pKQyx\",\"errorPost\":\"Posts_errorPost__UbB-W\",\"errorLogin\":\"Posts_errorLogin__ls34U\",\"postFlexContainer\":\"Posts_postFlexContainer__FpBKn\",\"formsContainer\":\"Posts_formsContainer__QPpTe\",\"PostInputForm\":\"Posts_PostInputForm__t0uui\",\"sendButton\":\"Posts_sendButton__79+rA\"};"],"names":["ValidComponent","field","form","placeholder","className","children","incClass","name","props","component","Textarea","Input","createField","type","captcha","error","userData","email","login","to","initialValues","passoword","remebmerMe","validate","validateLogin","onSubmit","values","AuthApi","data","resultCode","window","location","reload","getCaptcha","setError","messages","c","src","alt","onBlur","compose","connect","state","auth","actions","validatePost","errors","newPost","length","validateProfile","aboutMe","fullName","lookingForAJobDescription","bigURL","Object","contacts","filter","item","someUrlIsWrong"],"sourceRoot":""}