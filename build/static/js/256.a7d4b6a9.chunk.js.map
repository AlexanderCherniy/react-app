{"version":3,"file":"static/js/256.a7d4b6a9.chunk.js","mappings":"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","sources":["webpack://react-first/./src/components/Massages/Massages.module.scss?caa8","redux/massages-reselects.tsx","components/Massages/Massages.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"massages\":\"Massages_massages__sK+DR\",\"users\":\"Massages_users__UqwpF\",\"user\":\"Massages_user__EWK5F\",\"activeUser\":\"Massages_activeUser__0MXkH\",\"online\":\"Massages_online__qoOeB\",\"userMassages\":\"Massages_userMassages__SIWId\",\"massage\":\"Massages_massage__wl1mI\",\"container\":\"Massages_container__MT1Ze\",\"formsContainer\":\"Massages_formsContainer__cu7hK\",\"textarea\":\"Massages_textarea__EZqMJ\",\"button\":\"Massages_button__cZnoY\"};","import { AppState } from './store-redux';\r\nimport { createSelector } from \"reselect\"\r\nimport Users from '../components/Users/Users';\r\n\r\n\r\nexport const getMassagesSelector = (state:AppState)=>{\r\n    return state.massagesPage.massages\r\n}\r\nexport const getMassages = createSelector(getMassagesSelector,(massages)=>{\r\n    return massages\r\n})","import mClas from './Massages.module.scss'\r\nimport React from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState } from '../../redux/store-redux';\r\nimport { getMassages } from '../../redux/massages-reselects';\r\nimport { actions } from '../../redux/massages-reducer'\r\nimport { OldURL } from '../../noc/oldURL';\r\nimport { createField, Textarea } from '../../Forms/Forms';\r\nimport { Form, Formik } from 'formik';\r\nimport { Breadcrumb } from 'antd';\r\nconst Massages: React.FC = (props) => {\r\n\r\n    const shortUsers = useSelector((state: AppState) => state.massagesPage.users.map(user => <Users key={user.userId} online={user.online}\r\n        userPhoto={user.userPhoto}\r\n        userId={user.userId} userName={user.userName} />))\r\n\r\n    const shortMassages = useSelector((state: AppState) => getMassages(state).map(massage => <UsersMassages key={massage.Id} massage={massage.massage} />))\r\n\r\n    const dispatch = useDispatch()\r\n    const createPostDispatch = (message: string) => dispatch(actions.massageActionCreator(message))\r\n    const createPost = (message: string) => {\r\n        createPostDispatch(message)\r\n    }\r\n    type MessagesValues = {\r\n        message: string\r\n    }\r\n    type MessagesValuesKeys = keyof MessagesValues\r\n    const initialValues: MessagesValues = {\r\n        message: ''\r\n    }\r\n    return <Formik initialValues={initialValues}\r\n        onSubmit={async values => {\r\n            if (values.message !== '' && values.message !== ' ') {\r\n                createPost(values.message)\r\n                values.message = ''\r\n            }\r\n        }}>\r\n        <Form>\r\n            <main className={mClas.massages}>\r\n                <Breadcrumb style={{ margin: '16px 0', }}>\r\n                    <Breadcrumb.Item>Start</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>MessagesPage</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>Messages</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className={mClas.container}>\r\n                    <div className={mClas.users}>\r\n                        {shortUsers}\r\n                    </div>\r\n                    <div className={mClas.userMassages}>\r\n                        <div className={mClas.massage}>\r\n                            {shortMassages}\r\n                        </div>\r\n                        <div className={mClas.formsContainer}>\r\n                            {createField<MessagesValuesKeys>(mClas.textarea, 'message', Textarea, \"Напишите сообщение...\")}\r\n                            <button className={mClas.button} type='submit' >Send</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </Form>\r\n    </Formik>\r\n\r\n}\r\ntype UsersType = {\r\n    online: string\r\n    userPhoto: string\r\n    userName: string\r\n    userId: number\r\n}\r\nexport const Users: React.FC<UsersType> = props => {\r\n    let online = props.online\r\n    online === 'true' ? online = '#81b53e' : online = '#f0ad4e'\r\n    return (\r\n        <div className={mClas.user}>\r\n            <NavLink to={'/massages/' + props.userId} className={link => link.isActive ? mClas.activeUser : mClas.user}>\r\n                <img src={props.userPhoto} alt=\"\" />\r\n                {props.userName}\r\n                <div style={{ background: online }} className={mClas.online}></div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\ntype UsersMassagesType = {\r\n    massage: string\r\n}\r\nexport const UsersMassages: React.FC<UsersMassagesType> = props => {\r\n    return (\r\n        <div className={mClas.massage}>\r\n            {props.massage}\r\n        </div>\r\n    )\r\n}\r\nconst MassagesUrlContainer = OldURL(Massages)\r\nexport default MassagesUrlContainer;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"],"names":["getMassages","createSelector","state","massagesPage","massages","Users","props","online","className","mClas","to","userId","link","isActive","src","userPhoto","alt","userName","style","background","UsersMassages","massage","MassagesUrlContainer","OldURL","shortUsers","useSelector","users","map","user","shortMassages","Id","dispatch","useDispatch","createPost","message","actions","createPostDispatch","initialValues","onSubmit","values","margin","createField","Textarea","type","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations"],"sourceRoot":""}