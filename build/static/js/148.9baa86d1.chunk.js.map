{"version":3,"file":"static/js/148.9baa86d1.chunk.js","mappings":"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","sources":["webpack://react-first/./src/components/Massages/Messages.module.scss?572c","webpack://react-first/./src/components/Massages/UsersMessages/UsersMessags.module.scss?c4dc","components/Massages/UsersMessages/UsersMessages.tsx","webpack://react-first/./src/components/Massages/SelectUsers/SelectUsers.module.scss?e063","components/Massages/SelectUsers/SelectUsers.tsx","webpack://react-first/./src/components/Massages/ShortUsers/ShortUsers.module.scss?3db7","components/Massages/ShortUsers/ShortUsers.tsx","webpack://react-first/./src/components/Massages/ShortMessages/ShortMessages.module.scss?af86","components/Massages/ShortMessages/ShortMessages.tsx","components/Massages/Messages.tsx","noc/hoc.tsx","../node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","../node_modules/@ant-design/icons/es/icons/CheckOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/SendOutlined.js","../node_modules/@ant-design/icons/es/icons/SendOutlined.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"messages\":\"Messages_messages__kqKuC\",\"container\":\"Messages_container__pEiH8\",\"containerSmallWidth\":\"Messages_containerSmallWidth__OEe3e\",\"massage\":\"Messages_massage__Kx5ST\",\"InputSearchUsers\":\"Messages_InputSearchUsers__jufk8\",\"SearchUsersFlexContainer\":\"Messages_SearchUsersFlexContainer__V1WTh\"};","// extracted by mini-css-extract-plugin\nexport default {\"messageViewed\":\"UsersMessags_messageViewed__WY2eZ\",\"messageNotViewed\":\"UsersMessags_messageNotViewed__tcaGL\",\"myMessage\":\"UsersMessags_myMessage__LMGDs\",\"myPhoto\":\"UsersMessags_myPhoto__R7kaI\",\"messageHelper\":\"UsersMessags_messageHelper__0hEsJ\",\"userMassage\":\"UsersMessags_userMassage__g+4Os\",\"userPhoto\":\"UsersMessags_userPhoto__NWXKH\"};","import { CheckOutlined, SendOutlined } from '@ant-design/icons';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteYourMessage, getConcreteUserMessages } from '../../../redux/massages-reducer';\r\nimport { AppState } from '../../../redux/store-redux';\r\nimport cn from './UsersMessags.module.scss'\r\n\r\ntype UsersMassagesType = {\r\n    myId: number\r\n    senderId: number\r\n    userId: number | string\r\n    body: string\r\n    id: string\r\n    viewed: boolean\r\n    photo: string\r\n}\r\nlet count = 0\r\nconst UsersMassages: React.FC<UsersMassagesType> = props => {\r\n\r\n    const myPhoto = useSelector((state: AppState) => state.auth.photo)\r\n    const dispatch = useDispatch()\r\n    const deleteMessage = async (messageID: string, userId: number | string) => {\r\n        //@ts-ignore\r\n        dispatch(deleteYourMessage(messageID, userId))\r\n    }\r\n    useEffect(() => {\r\n        count++\r\n        if (count <= 3) {\r\n            //@ts-ignore\r\n            dispatch(getConcreteUserMessages(window.location.href.split('/')[5]))\r\n        }\r\n    }, [window.location.href.split('/')[5]])\r\n    if (props.senderId === props.myId) {\r\n        return (\r\n            <div style={window.innerWidth <= 450 ? { fontSize: 16 } : { fontSize: 20 }} className={cn.myMessage}>\r\n                <div className={cn.messageHelper}>\r\n                    {/* @ts-ignore */}\r\n                    <img className={cn.myPhoto} src={myPhoto} alt='Avatar' title='User Photo' />\r\n                    <div>\r\n                        {props.body}\r\n                    </div>\r\n                    <div>\r\n                        <div title='Delete your message (only for you)' style={{ marginLeft: 30, cursor: 'pointer', position: 'absolute', right: 10, }} onClick={() => deleteMessage(props.id, props.userId)}>X</div>\r\n                        {props.viewed === true ? <CheckOutlined title='Message was viewed' className={cn.messageViewed} /> : <SendOutlined title='Message was not viewed' className={cn.messageNotViewed} />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div style={window.innerWidth <= 450 ? { fontSize: 16 } : { fontSize: 20 }} className={cn.userMassage}>\r\n            <img className={cn.userPhoto} src={props.photo} alt='Avatar' title='User Photo' />\r\n            {props.body}\r\n        </div>\r\n    )\r\n}\r\nexport default UsersMassages","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"SelectUsers_user__DJ7aD\",\"activeUser\":\"SelectUsers_activeUser__fDKT+\",\"online\":\"SelectUsers_online__VsGZl\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport cn from './SelectUsers.module.scss'\r\n\r\ntype UsersType = {\r\n    hasNewMessages: boolean | string\r\n    userPhoto: string\r\n    userName: string\r\n    userId: number\r\n    userIdURL: string | number\r\n    setUserIdUrl: any\r\n}\r\nconst SelectUsers: React.FC<UsersType> = (props) => {\r\n    let online = props.hasNewMessages\r\n    online === true ? online = '#81b53e' : online = '#f0ad4e'    \r\n    return (\r\n        <div onClick={() => props.setUserIdUrl(window.location.href.split('/')[4] === '#' ? window.location.href.split('/')[6] : window.location.href.split('/')[5])} className={cn.user}>\r\n            <NavLink to={'/massages/' + props.userId} className={link => link.isActive ? cn.activeUser : cn.user}>\r\n                <img src={props.userPhoto} alt=\"\" />\r\n                {props.userName}\r\n                <div style={{ background: online }} className={cn.online}></div>\r\n            </NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default SelectUsers","// extracted by mini-css-extract-plugin\nexport default {\"users\":\"ShortUsers_users__VCgz3\",\"usersSmallWidth\":\"ShortUsers_usersSmallWidth__N6hEB\",\"users990Width\":\"ShortUsers_users990Width__h1dqM\",\"users750Width\":\"ShortUsers_users750Width__Dbds7\"};","import { Dispatch, SetStateAction } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppState } from '../../../redux/store-redux'\r\nimport SelectUsers from '../SelectUsers/SelectUsers'\r\nimport cn from './ShortUsers.module.scss'\r\n\r\ntype ShortUsersType = {\r\n    userIdURL: number | string\r\n    setUserIdUrl: Dispatch<SetStateAction<string | number>>\r\n}\r\n\r\nconst ShortUsers: React.FC<ShortUsersType> = (props) => {\r\n    const shortUsers = useSelector((state: AppState) => state.massagesPage.users.map((user) => <SelectUsers userIdURL={props.userIdURL} setUserIdUrl={props.setUserIdUrl} key={user.id} hasNewMessages={user.hasNewMessages}\r\n    userPhoto={user.photos.small}\r\n    userId={user.id} userName={user.userName} />))\r\n    return (\r\n        <div className={window.innerWidth <= 1300 ? window.innerWidth <= 990 ? window.innerWidth <= 750 ? cn.users750Width : cn.users990Width : cn.usersSmallWidth : cn.users}>\r\n            {shortUsers}\r\n        </div>\r\n    )\r\n}\r\nexport default ShortUsers","// extracted by mini-css-extract-plugin\nexport default {\"userMassages\":\"ShortMessages_userMassages__-M0dE\",\"message\":\"ShortMessages_message__CVObn\",\"formsContainer\":\"ShortMessages_formsContainer__K9Qfg\",\"textarea\":\"ShortMessages_textarea__inzo3\",\"button\":\"ShortMessages_button__8Nd-X\"};","import { NavLink } from \"react-router-dom\"\r\nimport { MessagesValues } from \"../Messages\"\r\nimport { SendOutlined } from '@ant-design/icons';\r\nimport cn from './ShortMessages.module.scss'\r\nimport { createField, Textarea } from \"../../../Forms/Forms\";\r\nimport { Form, SubmitButton } from \"formik-antd\";\r\ntype ShortMessagesType = {\r\n    shortMassages: React.ReactNode\r\n    setReloadesPage: (reloadesPage: number) => void\r\n    reloadesPage: number\r\n}\r\ntype MessagesValuesKeys = keyof MessagesValues\r\nconst ShortMessages: React.FC<ShortMessagesType> = (props) => {\r\n    return (\r\n        <div className={cn.userMassages}>\r\n            <div className={cn.message}>\r\n                {window.innerWidth <= 900 ? <NavLink onClick={() => props.setReloadesPage(props.reloadesPage + 1)} to={'/massages'}>Back</NavLink> : <></>} \r\n                {props.shortMassages}\r\n            </div>\r\n            <Form>\r\n                <div className={cn.formsContainer}>\r\n                    {createField<MessagesValuesKeys>(cn.textarea, 'message', Textarea, \"Напишите сообщение...\")}\r\n                    <SubmitButton type='default' className={cn.button}><SendOutlined style={{fontSize: 21}}/></SubmitButton>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nexport default ShortMessages","import mClas from './Messages.module.scss'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppState } from '../../redux/store-redux';\r\nimport { getAllDialogs, getConcreteUserMessages, sendMessageToUser } from '../../redux/massages-reducer'\r\nimport { OldURL } from '../../noc/oldURL';\r\nimport { createField, Textarea, Input } from '../../Forms/Forms';\r\nimport { Form, Formik } from 'formik';\r\nimport { putDialogWithUsers } from \"../../redux/massages-reducer\";\r\nimport UsersMassages from './UsersMessages/UsersMessages';\r\nimport { SubmitButton } from 'formik-antd';\r\nimport BreadCrumbContainer from '../BreadCrumb/BreadCrumb';\r\nimport AnonimGoLogin from '../../noc/hoc';\r\nimport { compose } from 'redux';\r\nimport ShortUsers from './ShortUsers/ShortUsers';\r\nimport ShortMessages from './ShortMessages/ShortMessages';\r\nimport { getMyUserProfile } from '../../redux/profile-reselects';\r\nexport type MessagesValues = {\r\n    message: string\r\n    userId: number | string\r\n}\r\nconst Massages: React.FC = () => {\r\n    const [userIdURL, setUserIdUrl] = useState<number | string>(window.location.href.split('/')[6])\r\n    const [reloadesPage, setReloadesPage] = useState<number>(1)\r\n    const myId = useSelector((state: AppState) => state.auth.id)\r\n    const users = useSelector((state: AppState) => state.massagesPage.users)\r\n\r\n    const messages = useSelector((state: AppState) => state.massagesPage.massages)\r\n    users.map((u) => {\r\n        messages.map(m => {\r\n            if (u.id === m.senderId) {\r\n                return m.photo = u.photos.small\r\n            }\r\n        })\r\n    })\r\n    const userDataEmail = useSelector((state: AppState)=> state.auth.login)\r\n    \r\n    const shortMassages = messages.map((massage, index) => <UsersMassages photo={massage.photo} userId={userIdURL} id={massage.id} viewed={massage.viewed} myId={myId} senderId={massage.senderId} key={index} body={massage.body} />)\r\n    const dispatch = useDispatch()\r\n\r\n    const initialValues: MessagesValues = {\r\n        message: '',\r\n        userId: ''\r\n    }\r\n    let counter = 0\r\n    useEffect(() => {\r\n        counter++\r\n        //@ts-ignore\r\n        dispatch(getAllDialogs())\r\n        //@ts-ignore\r\n        if(counter === 0){\r\n            //@ts-ignore\r\n            dispatch(setUserIdUrl(window.location.href.split('/')[4] === '#' ? window.location.href.split('/')[6] : window.location.href.split('/')[5]))\r\n        }\r\n        //@ts-ignore\r\n        dispatch(getConcreteUserMessages(userIdURL))\r\n\r\n    }, [userIdURL])\r\n    // useEffect(()=>{\r\n    //     window.location.href.split('/')[5] === undefined && users[0].userName !== 'Anonim' ?\r\n    //     return <Navigate to={'/massages/' + users[0].id}/> : <></>\r\n\r\n    // }, [])\r\n    return <Formik initialValues={initialValues}\r\n        onSubmit={async values => {\r\n            if (values.message !== '' && values.message !== ' ') {\r\n                //@ts-ignore\r\n                await dispatch(sendMessageToUser(userIdURL, values.message))\r\n                values.message = ''\r\n                //@ts-ignore\r\n                dispatch(getConcreteUserMessages(userIdURL))\r\n                //@ts-ignore\r\n                dispatch(getAllDialogs())\r\n            }\r\n            if (values.userId !== '') {\r\n                //@ts-ignore\r\n                await dispatch(putDialogWithUsers(values.userId))\r\n                //@ts-ignore\r\n                dispatch(getAllDialogs())\r\n            }\r\n        }}>\r\n        <main className={mClas.messages}>\r\n            <BreadCrumbContainer page='Messages' containerPage='MessagesPage'/>\r\n            <div style={ window.innerWidth <= 512 ? {} :{display: 'flex'}}>\r\n                <Form className={mClas.SearchUsersFlexContainer}>\r\n                    {createField(mClas.InputSearchUsers, 'userId', Input, \"Введите ID собеседника\")}\r\n                    <SubmitButton type='default'>Find</SubmitButton>\r\n                </Form>\r\n                {window.innerWidth <= 512 ? <div style={{background: 'white', padding: '8px 20px', borderRadius: 3 ,marginBottom: 10, display: 'flex', justifyContent: 'center', alignItems: 'center'}}><b>{userDataEmail}</b></div> : <span style={{marginBottom: 9 ,marginLeft: 10 ,background: 'white', padding: '0px 20px', display:'flex', alignItems: 'center'}}><b>{userDataEmail}</b></span>}\r\n            </div>\r\n            <div className={window.innerWidth <= 1300 ? mClas.containerSmallWidth : mClas.container}>\r\n                {window.innerWidth <= 900 ? window.location.href.split('/')[4] === '#'\r\n                    ? window.location.href.split('/')[6] === undefined\r\n                    : window.location.href.split('/')[5] === undefined\r\n                        ? <ShortUsers userIdURL= {userIdURL} setUserIdUrl={setUserIdUrl}/> : <></> : <ShortUsers userIdURL={userIdURL} setUserIdUrl={setUserIdUrl} />}\r\n\r\n                {window.innerWidth <= 900 ? window.location.href.split('/')[4] === '#'\r\n                    ? window.location.href.split('/')[6] !== undefined\r\n                    : window.location.href.split('/')[5] !== undefined\r\n                        ?\r\n                        <ShortMessages setReloadesPage={setReloadesPage} reloadesPage={reloadesPage} shortMassages={shortMassages} /> : <></> :\r\n                    <ShortMessages setReloadesPage={setReloadesPage} reloadesPage={reloadesPage} shortMassages={shortMassages} />}\r\n            </div>\r\n        </main>\r\n    </Formik>\r\n\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    AnonimGoLogin,\r\n    OldURL\r\n)(React.memo(Massages))\r\n\r\n","import React, { ComponentType } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Navigate } from 'react-router-dom'\r\nimport { AppState } from '../redux/store-redux'\r\nimport { JSXElementConstructor } from 'react'\r\n\r\ntype HOCProps = {\r\n    isMyProfile: boolean\r\n    isAuth:boolean\r\n}\r\nconst AnonimGoLogin = (WrappedComponent:ComponentType<any>)=>{\r\n    const mapAnonimStateToProps = (state:AppState)=>{\r\n        return{\r\n            isAuth: state.auth.isAuth\r\n        } \r\n    }\r\n    const HOC = (props:HOCProps)=>{\r\n        if(!props.isAuth) return <Navigate to='/selectionPage'/>\r\n        return <WrappedComponent {...props}/>\r\n    }\r\n    return connect(mapAnonimStateToProps)(HOC)\r\n}\r\nexport default AnonimGoLogin","// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\n\nCheckOutlined.displayName = 'CheckOutlined';\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);","// This icon file is generated automatically.\nvar SendOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M931.4 498.9L94.9 79.5c-3.4-1.7-7.3-2.1-11-1.2a15.99 15.99 0 00-11.7 19.3l86.2 352.2c1.3 5.3 5.2 9.6 10.4 11.3l147.7 50.7-147.6 50.7c-5.2 1.8-9.1 6-10.3 11.3L72.2 926.5c-.9 3.7-.5 7.6 1.2 10.9 3.9 7.9 13.5 11.1 21.5 7.2l836.5-417c3.1-1.5 5.6-4.1 7.2-7.1 3.9-8 .7-17.6-7.2-21.6zM170.8 826.3l50.3-205.6 295.2-101.3c2.3-.8 4.2-2.6 5-5 1.4-4.2-.8-8.7-5-10.2L221.1 403 171 198.2l628 314.9-628.2 313.2z\" } }] }, \"name\": \"send\", \"theme\": \"outlined\" };\nexport default SendOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SendOutlinedSvg from \"@ant-design/icons-svg/es/asn/SendOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar SendOutlined = function SendOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SendOutlinedSvg\n  }));\n};\n\nSendOutlined.displayName = 'SendOutlined';\nexport default /*#__PURE__*/React.forwardRef(SendOutlined);"],"names":["count","props","myPhoto","useSelector","state","auth","photo","dispatch","useDispatch","deleteMessage","messageID","userId","deleteYourMessage","useEffect","getConcreteUserMessages","window","location","href","split","senderId","myId","style","innerWidth","fontSize","className","cn","src","alt","title","body","marginLeft","cursor","position","right","onClick","id","viewed","CheckOutlined","SendOutlined","online","hasNewMessages","setUserIdUrl","to","link","isActive","userPhoto","userName","background","shortUsers","massagesPage","users","map","user","userIdURL","photos","small","setReloadesPage","reloadesPage","shortMassages","createField","Textarea","type","Massages","useState","messages","massages","u","m","userDataEmail","login","massage","index","counter","getAllDialogs","initialValues","message","onSubmit","values","sendMessageToUser","putDialogWithUsers","mClas","BreadCrumb","page","containerPage","display","Input","padding","borderRadius","marginBottom","justifyContent","alignItems","undefined","compose","AnonimGoLogin","OldURL","React","WrappedComponent","connect","isAuth","ref","AntdIcon","_objectSpread","icon","CheckOutlinedSvg","displayName","SendOutlinedSvg"],"sourceRoot":""}