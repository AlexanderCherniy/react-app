{"version":3,"file":"static/js/803.48a67c44.chunk.js","mappings":"uMACA,GAAgB,MAAQ,qBAAqB,KAAO,oBAAoB,MAAQ,qBAAqB,uBAAyB,sCAAsC,cAAgB,6BAA6B,mBAAqB,kCAAkC,SAAW,wBAAwB,UAAY,yBAAyB,YAAc,2BAA2B,YAAc,2BAA2B,cAAgB,6BAA6B,gBAAkB,+BAA+B,WAAa,0BAA0B,OAAS,sBAAsB,MAAQ,qBAAqB,UAAY,0B,+CCoB/mB,EAZ8C,SAAC,GAA+C,IAA9CA,EAA6C,EAA7CA,EAAGC,EAA0C,EAA1CA,UAAWC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,YACzE,OACmB,IAAfH,EAAEI,UACI,mBAAQC,SAAUJ,EAAUK,MAAK,SAAAC,GAAE,OAAIA,IAAOP,EAAEO,MAAKC,UAAWC,EAAAA,SAAkBC,QAAS,WACzFR,EAAcF,EAAEO,KADlB,UAEC,SAACI,EAAA,EAAD,CAAoBC,MAAO,CAACC,SAAU,OAAQC,MAAM,mBAAoBC,WAAY,cACrF,mBAAQV,SAAUJ,EAAUK,MAAK,SAAAC,GAAE,OAAIA,IAAOP,EAAEO,MAAKC,UAAWC,EAAAA,OAAgBC,QAAS,WACvFP,EAAYH,EAAEO,KADhB,UAEH,SAACS,EAAA,EAAD,CAAiBJ,MAAO,CAACC,SAAU,OAAQC,MAAM,mBAAoBC,WAAY,cCqB5F,EAzB8B,SAAAE,GAE1B,OACIA,EAAMC,WAAWC,KAAI,SAACnB,GAClB,OACI,iBAAgBQ,UAAWC,EAAAA,KAA3B,WACI,SAAC,KAAD,CAASW,GAAI,YAAcpB,EAAEO,GAA7B,UACI,gBAAKC,UAAWC,EAAAA,MAAeY,IAAwB,OAAnBrB,EAAEsB,OAAOC,MAfjE,iJAe4FvB,EAAEsB,OAAOC,MAAOC,IAAI,iBAEhG,iBAAKhB,UAAWC,EAAAA,YAAhB,WACI,iBAAKD,UAAWC,EAAAA,SAAhB,WACI,kBAAMD,UAAWC,EAAAA,gBAAjB,iBAA+CT,EAAEO,OACjD,kBAAMC,UAAWC,EAAAA,gBAAjB,mBAAiDT,EAAEyB,SACnD,kBAAMjB,UAAWC,EAAAA,gBAAjB,qBAAgE,OAAbT,EAAE0B,OAAkB,eAAiB1B,EAAE0B,cAE9F,0BACI,SAAC,GAAD,QAAuB1B,EAAGA,GAAOiB,WAXnCjB,EAAEO,Q,8BC8B5B,EArBoC,SAAAU,GAIhC,IAFA,IAAIU,EAAaC,KAAKC,KAAKZ,EAAMa,WAAab,EAAMc,UAChDC,EAAQ,GACHC,EAAI,EAAGA,GAAKN,EAAYM,IAC7BD,EAAME,KAAKD,GAEf,IAAIE,EAAOlB,EAAMmB,YACbC,EAAUF,EAAO,EAAK,EAAK,EAAIA,EAAO,EACtCG,EAAQH,EAAO,EACfI,EAAcP,EAAMQ,MAAMH,EAAOC,IACpBG,EAAAA,EAAAA,MAEjB,OACI,8BAAGF,EAAYpB,KAAI,SAAAuB,GACf,OAAO,iBAAchC,QAAS,WAAQO,EAAM0B,WAAWD,EAAGzB,EAAM2B,KAAM3B,EAAM4B,eAAiBrC,UAAWS,EAAMmB,cAAgBM,EAAIjC,EAAAA,UAAoBA,EAAAA,YAA/I,SACFiC,GADaA,SC5B9B,EATqC,SAAAzB,GACjC,OAAmB,IAAhBA,EAAM6B,OACLC,YAAW,WACP9B,EAAM+B,mBAAkB,KAC1B,MACK,gBAAKxC,UAAWC,EAAAA,MAAhB,kDAEJ,oB,UCLEwC,GAAWC,EAAAA,EAAAA,KAHO,SAACC,GAC5B,OAAOA,EAAMC,UAAUC,SAE6B,SAACA,GACrD,OAAOA,EAAMC,QAAO,SAAAC,GAAI,MAAiB,aAAdA,EAAK9B,WAKvB+B,GAAWN,EAAAA,EAAAA,KAHQ,SAACC,GAC7B,OAAOA,EAAMC,UAAUK,eAE6B,SAAAX,GACpD,OAAOA,K,yFCyGLY,GAAoBC,EAAAA,EAAAA,IAvGF,SAAA1C,GACpB,IAAQ2C,EAAWC,EAAAA,EAAAA,OACnB,GAA0CC,EAAAA,EAAAA,WAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACM9C,GAAa+C,EAAAA,EAAAA,IAAYhB,GACzBlB,GAAWkC,EAAAA,EAAAA,KAAY,SAACd,GAAD,OAAqBA,EAAMC,UAAUrB,YAC5DD,GAAamC,EAAAA,EAAAA,KAAY,SAACd,GAAD,OAAqBA,EAAMC,UAAUtB,cAC9DM,GAAc6B,EAAAA,EAAAA,KAAY,SAACd,GAAD,OAAqBA,EAAMC,UAAUhB,eAC/D8B,GAAcD,EAAAA,EAAAA,KAAY,SAACd,GAAD,OAAqBA,EAAMC,UAAUe,UAC/DlE,GAAYgE,EAAAA,EAAAA,KAAY,SAACd,GAAD,OAAqBA,EAAMC,UAAUnD,aAC7D2C,GAAOqB,EAAAA,EAAAA,KAAY,SAACd,GAAD,OAAqBA,EAAMC,UAAUR,QACxDC,GAAeoB,EAAAA,EAAAA,KAAY,SAACd,GAAD,OAAqBA,EAAMC,UAAUP,gBAChEC,GAAQmB,EAAAA,EAAAA,IAAYT,GACpBY,GAAW3B,EAAAA,EAAAA,MAGX4B,EAAY,SAAC3B,EAAYX,EAAkBa,EAAqBC,GAApD,OAAgGuB,GAASE,EAAAA,EAAAA,IAAW5B,EAAGX,EAAUa,EAAMC,KASnJ0B,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MAEf,GAAqCC,EAAAA,EAAAA,MAArC,eAAKC,EAAL,KACMC,GADN,KACgBD,EAAYE,IAAI,SAAW,IACrCC,EAAYH,EAAYE,IAAI,UAC5BE,EAAWJ,EAAYE,IAAI,UAAY,EACvCG,EAAUL,EAAYE,IAAI,SAAW1C,EAY3C,OAVA8C,EAAAA,EAAAA,YAAU,WACNX,EAAS,SAAD,OAAUE,EAAOA,SAFN,eAAC/B,EAAD,wDAAcuC,EAAYb,EAASe,EAAAA,GAAAA,UAAkBzC,IAGxE0C,EAAgBH,KACjB,KACHC,EAAAA,EAAAA,YAAU,YAdY,SAACG,EAA0BjD,EAAqBL,EAAkBa,EAAqBC,GAA4CuB,GAASkB,EAAAA,EAAAA,IAAeD,EAAkBjD,EAAaL,EAAUa,EAAMC,IAe5N0C,CAAcrE,EAAWsE,QAASP,EAASD,EAAoBH,EAASE,GAC9C,IAAtB7D,EAAWsE,OAAcxB,GAAiB,GACzCA,GAAiB,GACtBO,EAAS,eAAD,OAAgBnC,EAAhB,kBAAqC4C,EAArC,iBAAsDH,EAAtD,mBAAsF,SAAdE,EAAuB,OAAuB,SAAdA,EAAuB,OAAS,YACjJ,CAAC7D,EAAYuD,EAAOA,OAAQrC,KACxB,SAAC,KAAD,CACHqD,cAAe,CAAE7C,KAAMiC,EAAShC,aAAckC,GAC9CW,SAAQ,mCAAE,WAAMC,GAAN,iEAENtB,EAAU,EAAGtC,EAAU4D,EAAO/C,KAAM+C,EAAO9C,cAC3C0B,EAAS,eAAD,OAAgBU,EAAhB,kBAAiClD,EAAjC,iBAAkD4D,EAAO/C,KAAzD,mBAAgG,SAAxB+C,EAAO9C,aAA0B,OAAiC,SAAxB8C,EAAO9C,aAA0B,OAAS,UAH9J,2CAAF,sDAFL,UAQH,kBAAMjC,MAAO,CAACgF,WAAY,GAAIC,cAAe,IAA7C,WACI,SAACC,EAAA,EAAD,CAAqBC,KAAK,QAAQC,cAAc,eAChD,SAAC,IAAD,CAAMpF,MAAO,CAACqF,aAAc,IAA5B,UACI,iBAAKrF,MAAOsF,OAAOC,YAAc,IAAM,GAAK,CAAEC,QAAS,OAAQC,IAAK,GAApE,WACKC,EAAAA,EAAAA,IAAY7F,EAAAA,UAAmB,OAAQ8F,EAAAA,GAAO,kBAC/C,UAAC,IAAD,CAAQ9E,KAAK,eAAeb,MAAO,CAAE4F,MAAO,QAASC,YAAa,GAAKC,aAAa,OAApF,WACI,SAAC9C,EAAD,CAAQ+C,MAAM,OAAd,kBACA,SAAC/C,EAAD,CAAQ+C,MAAM,OAAd,4BACA,SAAC/C,EAAD,CAAQ+C,MAAM,QAAd,iCAEJ,SAAC,IAAD,yBAGW,IAAlB5C,GAAyB,wCAEpB,iBAAKnD,MAAOsF,OAAOC,YAAc,KAAO,CAAEC,QAAS,OAAQQ,cAAe,SAAUP,IAAK,QAAW,CAAED,QAAS,OAAQC,IAAK,QAA5H,WACE,iBAAKzF,MAAO,CAAEiG,SAAU,SAAWrG,UAAWC,EAAAA,MAA9C,WACI,SAAC,EAAD,CAAcuC,kBAnDR,SAACtB,GAAD,OAAqB0C,EAASe,EAAAA,GAAAA,kBAA0BzD,KAmDVoB,MAAOA,KAC3D,gBAAKtC,UAAWC,EAAAA,cAAhB,UACI,0BACI,SAAC,EAAD,CAAaoC,aAAcA,EAAcD,KAAMA,EAAMd,WAAYA,EAAYC,SAAUA,EACnFK,YAAaA,EAAaO,WAxDvC,SAACD,EAAWE,EAAqBC,GAAjC,OAA6EwB,EAAU3B,EAAGX,EAAUa,EAAMC,WA2DzG,gBAAKrC,UAAWC,EAAAA,gBAAhB,UACqB,IAAhByD,GAAuB,gBAAK1D,UAAWC,EAAAA,aAA6B,MAEzE,gBAAKG,MAAOsF,OAAOC,YAAc,IAAM,CAAEC,QAAS,OAAQQ,cAAe,SAAUE,WAAY,UAAa,CAACD,SAAU,KAAvH,UACI,SAAC,EAAD,CAAM5G,UAAWA,EAAWiB,WAAYA,EACpCf,YA7DR,SAACI,GAAD,OAAgB6D,GAAS2C,EAAAA,EAAAA,IAAaxG,KA6DJL,cA3DhC,SAACK,GAAD,OAAgB6D,GAAS4C,EAAAA,EAAAA,IAAezG,aA8D9C,gBAAKC,UAAWC,EAAAA,uBAAhB,UACI,iBAAKD,UAAWC,EAAAA,cAAhB,WACI,eAAID,UAAWC,EAAAA,mBAAf,4BACA,yDAA+B,0CAA/B,kCAAkF,qCAClF,4DAAkC,sCAAlC,6BAA4E,8BAA5E,iEAAkJ,uCAClJ,iBAAKG,MAAO,CAAEqG,UAAW,UAAzB,oHACkG,+BADlG,kCAGA,wJAC6H,gCAD7H,gCAGA,40BAU5B","sources":["webpack://react-first/./src/components/Users/Users.module.scss?b204","components/Users/User/FollowUnfollowButtons.tsx","components/Users/User/User.tsx","components/Users/SlicedPages.tsx","components/Errors/ErrorUsersPage.tsx","redux/users-reselects.ts","components/Users/Users.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"photo\":\"Users_photo__CmWrI\",\"user\":\"Users_user__HMDbe\",\"users\":\"Users_users__4vlpJ\",\"instructationContainer\":\"Users_instructationContainer__S11-t\",\"instructation\":\"Users_instructation__XnbWx\",\"instructationTitle\":\"Users_instructationTitle__IxRFw\",\"userInfo\":\"Users_userInfo__J45OZ\",\"activeNum\":\"Users_activeNum__PlKV6\",\"noactiveNum\":\"Users_noactiveNum__Aokck\",\"AllUserInfo\":\"Users_AllUserInfo__D18jK\",\"numsContainer\":\"Users_numsContainer__yRn4V\",\"AllUserInfoItem\":\"Users_AllUserInfoItem__ZfjTQ\",\"loaderSpin\":\"Users_loaderSpin__fKlPE\",\"cyrcle\":\"Users_cyrcle__5x0-5\",\"error\":\"Users_error__I1Ur0\",\"findUsers\":\"Users_findUsers__86xhU\"};","import { UserType } from '../../../redux/GlobalTypes'\r\nimport classes from '../Users.module.scss'\r\nimport {UserAddOutlined, UserDeleteOutlined } from '@ant-design/icons';\r\ntype Props = {\r\n    u: UserType\r\n    isBlocked: number[]\r\n    followUsers: (id: number)=> void\r\n    unfollowUsers: (id:number)=> void\r\n}\r\nconst FollowUnFollowButtons:React.FC<Props> = ({u, isBlocked, unfollowUsers, followUsers}) =>{\r\n    return(\r\n        u.followed === true\r\n            ? <button disabled={isBlocked.some(id => id === u.id)} className={classes.unfollow} onClick={() => {\r\n                unfollowUsers(u.id)\r\n            }}><UserDeleteOutlined style={{fontSize: '24px', color:'rgb(240, 59, 59)', background: 'white'}}/></button>\r\n            : <button disabled={isBlocked.some(id => id === u.id)} className={classes.follow} onClick={() => {\r\n                followUsers(u.id)\r\n        }}><UserAddOutlined style={{fontSize: '24px', color:'rgb(41, 181, 41)', background: 'white'}}/></button>\r\n        \r\n    )\r\n}\r\nexport default FollowUnFollowButtons","import { NavLink } from 'react-router-dom'\r\nimport { UserType } from '../../../redux/GlobalTypes'\r\nimport classes from '../Users.module.scss'\r\nimport FollowUnFollowButtons from './FollowUnfollowButtons'\r\nconst noPhoto =\r\n    'https://images.theconversation.com/files/449089/original/file-20220301-25-ckck4y.jpeg?ixlib=rb-1.1.0&q=45&auto=format&w=1200&h=1200.0&fit=crop'\r\ntype Props = {\r\n    usersState: Array<UserType> \r\n    isBlocked: Array<number>\r\n    followUsers: (id: number) => void\r\n    unfollowUsers: (id: number) => void\r\n}\r\n//@ts-ignore\r\nconst User: React.FC<Props> = props => {\r\n    \r\n    return (\r\n        props.usersState.map((u: UserType) => {\r\n            return (\r\n                <div key={u.id} className={classes.user}>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                        <img className={classes.photo} src={u.photos.small === null ? noPhoto : u.photos.small} alt='userPhoto' />\r\n                    </NavLink>\r\n                    <div className={classes.AllUserInfo}>\r\n                        <div className={classes.userInfo}>\r\n                            <span className={classes.AllUserInfoItem}>ID: {u.id}</span>\r\n                            <span className={classes.AllUserInfoItem}>Name: {u.name}</span>\r\n                            <span className={classes.AllUserInfoItem}>Status: {u.status === null ? 'No Status :(' : u.status}</span>\r\n                        </div>\r\n                        <div>\r\n                            <FollowUnFollowButtons u={u} {...props} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    )\r\n}\r\n\r\nexport default User","import classes from './Users.module.scss'\r\nimport type { PaginationProps } from 'antd';\r\nimport React from 'react';\r\nimport { fillUsers as fillUsersI, downloadUsers as downloadUsersI, followUsers as followUsersI, unfollowUsers as unfollowUsersI, actions } from \"../../redux/users-reducer\";\r\nimport { useDispatch } from 'react-redux';\r\nconst itemRender: PaginationProps['itemRender'] = (_, type, originalElement) => {\r\n  if (type === 'prev') {\r\n    return <a>Previous</a>;\r\n  }\r\n  if (type === 'next') {\r\n    return <a>Next</a>;\r\n  }\r\n  return originalElement;\r\n};\r\n\r\n\r\ntype Props = {\r\n    totalCount: number\r\n    pageSize: number\r\n    currentPage: number\r\n    term: string | null\r\n    searchParams: \"null\" | \"true\" | \"false\"\r\n    checkUsers: (p:number, term: string | null, searchParams: \"null\" | \"true\" | \"false\")=> void\r\n}\r\n\r\n\r\n\r\nconst SlicedPages:React.FC<Props> = props => {\r\n  \r\n    let pagesCount = Math.ceil(props.totalCount / props.pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let curP = props.currentPage;\r\n    let curPF = ((curP - 5) < 0) ? 0 : curP - 5;\r\n    let curPL = curP + 5;\r\n    let slicedPages = pages.slice(curPF, curPL);\r\n    const dispatch = useDispatch()\r\n    const setCurrentPage = (p: number)=> dispatch(actions.pagesNums(p))\r\n    return (\r\n        <>{slicedPages.map(p => {\r\n            return <span key={p} onClick={() => { props.checkUsers(p, props.term, props.searchParams) }} className={props.currentPage === p ? classes.activeNum : classes.noactiveNum}>\r\n                {p}\r\n            </span>\r\n        })}</>\r\n    )\r\n}\r\nexport default SlicedPages","import classes from '../Users/Users.module.scss'\r\ntype Props = {\r\n    error: boolean\r\n    toggleErrorStatus: (status:boolean)=> void\r\n}\r\nconst ErrorMassage:React.FC<Props> = props =>{\r\n    if(props.error === true){\r\n        setTimeout(()=>{\r\n            props.toggleErrorStatus(false)\r\n        },5000)\r\n        return <div className={classes.error}>OOPS! ERROR OCCURRED, TRY AGAIN...</div> \r\n    }\r\n    return <div></div>\r\n}\r\nexport default ErrorMassage","import { AppState } from './store-redux';\r\nimport { createSelector } from \"reselect\"\r\n\r\n\r\nexport const getUsersSelecor = (state:AppState)=>{\r\n    return state.usersPage.users\r\n}\r\nexport const getUsers = createSelector(getUsersSelecor, (users)=>{\r\n    return users.filter(user=> user.name !== 'karas518')\r\n})\r\nexport const getErrorSelector = (state:AppState)=>{\r\n    return state.usersPage.GlovalError\r\n}\r\nexport const getError = createSelector(getErrorSelector,error=>{\r\n    return error\r\n})","import classes from './Users.module.scss'\r\nimport User from './User/User'\r\nimport SlicedPages from './SlicedPages'\r\nimport ErrorMassage from '../Errors/ErrorUsersPage'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fillUsers as fillUsersI, downloadUsers as downloadUsersI, followUsers as followUsersI, unfollowUsers as unfollowUsersI, actions } from \"../../redux/users-reducer\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { getError, getUsers } from \"../../redux/users-reselects\";\r\nimport { AppState } from \"../../redux/store-redux\";\r\nimport { OldURL } from \"../../noc/oldURL\";\r\nimport { createField, Input } from '../../Forms/Forms'\r\nimport { Formik } from 'formik'\r\nimport { Form, Select, SubmitButton } from 'formik-antd'\r\nimport 'antd/dist/antd.css';\r\nimport { useLocation, useNavigate, useSearchParams } from 'react-router-dom';\r\nimport BreadCrumbContainer from '../BreadCrumb/BreadCrumb';\r\nconst Users: React.FC = props => {\r\n    const { Option } = Select;\r\n    const [usersNotFound, setUsersNotFound] = useState(false)\r\n    const usersState = useSelector(getUsers)\r\n    const pageSize = useSelector((state: AppState) => state.usersPage.pageSize)\r\n    const totalCount = useSelector((state: AppState) => state.usersPage.totalCount)\r\n    const currentPage = useSelector((state: AppState) => state.usersPage.currentPage)\r\n    const loaderState = useSelector((state: AppState) => state.usersPage.loader)\r\n    const isBlocked = useSelector((state: AppState) => state.usersPage.isBlocked)\r\n    const term = useSelector((state: AppState) => state.usersPage.term)\r\n    const searchParams = useSelector((state: AppState) => state.usersPage.searchParams)\r\n    const error = useSelector(getError)\r\n    const dispatch = useDispatch()\r\n\r\n    //@ts-ignore\r\n    const fillUsers = (p?: number, pageSize: number, term: string | null, searchParams: \"null\" | \"true\" | \"false\") => dispatch(fillUsersI(p, pageSize, term, searchParams))\r\n    const checkUsers = (p: number, term: string | null, searchParams: \"null\" | \"true\" | \"false\") => fillUsers(p, pageSize, term, searchParams)\r\n    const toggleErrorStatus = (status: boolean) => dispatch(actions.toggleErrorStatus(status))\r\n    //@ts-ignore\r\n    const followUsers = (id: number) => dispatch(followUsersI(id))\r\n    //@ts-ignore\r\n    const unfollowUsers = (id: number) => dispatch(unfollowUsersI(id))\r\n    //@ts-ignore\r\n    const downloadUsers = (usersStateLength: number, currentPage: number, pageSize: number, term: string | null, searchParams: \"null\" | \"true\" | \"false\") => dispatch(downloadUsersI(usersStateLength, currentPage, pageSize, term, searchParams))\r\n    const navigate = useNavigate()\r\n    const search = useLocation()\r\n\r\n    let [searchParam, setSearchParams] = useSearchParams();\r\n    const newTerm = searchParam.get(\"term\") || \"\"\r\n    const newFriend = searchParam.get(\"friend\")\r\n    const newCount = searchParam.get(\"count\") || 9\r\n    const newPage = searchParam.get(\"page\") || currentPage\r\n    const setCurrentPage = (p: number = +newPage) => dispatch(actions.pagesNums(p))\r\n    useEffect(() => {\r\n        navigate(`/users${search.search}`)\r\n        setCurrentPage(+newPage)\r\n    }, [])\r\n    useEffect(() => {\r\n        downloadUsers(usersState.length, +newPage, newCount as number, newTerm, newFriend as \"true\" | \"false\" | \"null\")\r\n        if (usersState.length === 0) setUsersNotFound(true)\r\n        else setUsersNotFound(false)\r\n        navigate(`/users?page=${currentPage}&count=${newCount}&term=${newTerm}&friend=${newFriend === \"null\" ? \"null\" : newFriend === \"true\" ? \"true\" : \"false\"}`)\r\n    }, [usersState, search.search, currentPage])\r\n    return <Formik\r\n        initialValues={{ term: newTerm, searchParams: newFriend }}\r\n        onSubmit={async values => {\r\n            //@ts-ignore\r\n            fillUsers(1, pageSize, values.term, values.searchParams)\r\n            navigate(`/users?page=${newPage}&count=${pageSize}&term=${values.term}&friend=${values.searchParams === \"null\" ? \"null\" : values.searchParams === \"true\" ? \"true\" : \"false\"}`)\r\n        }}>\r\n\r\n        <main style={{marginLeft: 10, paddingBottom: 30}}>\r\n            <BreadCrumbContainer page='Users' containerPage='UsersPage' />\r\n            <Form style={{marginBottom: 10}}>\r\n                <div style={window.innerWidth <= 450 ? {} : { display: 'flex', gap: 5 }}>\r\n                    {createField(classes.findUsers, 'term', Input, \"Find Users...\")}\r\n                    <Select name=\"searchParams\" style={{ width: '130px', marginRight: 5 }} defaultValue=\"null\">\r\n                        <Option value=\"null\">All</Option>\r\n                        <Option value=\"true\">Only Followed</Option>\r\n                        <Option value=\"false\">Only UnFollowed</Option>\r\n                    </Select>\r\n                    <SubmitButton>FIND</SubmitButton>\r\n                </div>\r\n            </Form>\r\n            {usersNotFound === true ? <div>NOT FOUND</div>\r\n\r\n                : <div style={window.innerWidth <= 1200 ? { display: 'flex', flexDirection: 'column', gap: '50px' } : { display: 'flex', gap: '25px' }}>\r\n                    <div style={{ maxWidth: '650px' }} className={classes.users}>\r\n                        <ErrorMassage toggleErrorStatus={toggleErrorStatus} error={error} />\r\n                        <div className={classes.numsContainer}>\r\n                            <div>\r\n                                <SlicedPages searchParams={searchParams} term={term} totalCount={totalCount} pageSize={pageSize}\r\n                                    currentPage={currentPage} checkUsers={checkUsers} />\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.loaderContainer}>\r\n                            {loaderState === true ? <div className={classes.loaderSpin}></div> : \"\"}\r\n                        </div>\r\n                        <div style={window.innerWidth <= 597 ? { display: 'flex', flexDirection: 'column', alignItems: 'center' } : {maxWidth: 555}}>\r\n                            <User isBlocked={isBlocked} usersState={usersState}\r\n                                followUsers={followUsers} unfollowUsers={unfollowUsers} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.instructationContainer}>\r\n                        <div className={classes.instructation}>\r\n                            <h2 className={classes.instructationTitle}>Who are they?</h2>\r\n                            <div>These are people from the <b>\"IT-KAMASUTRA\"</b> channel who started learning <b>React</b></div>\r\n                            <div>You can write to them in the <b>\"Messages\"</b> section, find out their <b>ID</b> here, or write to their social networks, which are in their <b>Profile</b></div>\r\n                            <div style={{ textAlign: 'center' }}>\r\n                        // Please note that some developers have not yet gotten around to customizing their profile using the <b>API</b>, they may not have data //\r\n                            </div>\r\n                            <div>\r\n                                If the user does not respond to messages or social networks indicated by him in the profile, you can try to write in the <b>Chat</b>, he may see your message\r\n                            </div>\r\n                            <div>Сделай потом, чтобы на маленьких экранах, это пояснение было сверху, можно было его скрыть нажав на крестик, и это сохранялось в localStorage, чтобы потом не появлялось</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </main>\r\n\r\n    </Formik>\r\n}\r\nconst UsersUrlContainer = OldURL(Users)\r\nexport default UsersUrlContainer"],"names":["u","isBlocked","unfollowUsers","followUsers","followed","disabled","some","id","className","classes","onClick","UserDeleteOutlined","style","fontSize","color","background","UserAddOutlined","props","usersState","map","to","src","photos","small","alt","name","status","pagesCount","Math","ceil","totalCount","pageSize","pages","i","push","curP","currentPage","curPF","curPL","slicedPages","slice","useDispatch","p","checkUsers","term","searchParams","error","setTimeout","toggleErrorStatus","getUsers","createSelector","state","usersPage","users","filter","user","getError","GlovalError","UsersUrlContainer","OldURL","Option","Select","useState","usersNotFound","setUsersNotFound","useSelector","loaderState","loader","dispatch","fillUsers","fillUsersI","navigate","useNavigate","search","useLocation","useSearchParams","searchParam","newTerm","get","newFriend","newCount","newPage","useEffect","actions","setCurrentPage","usersStateLength","downloadUsersI","downloadUsers","length","initialValues","onSubmit","values","marginLeft","paddingBottom","BreadCrumb","page","containerPage","marginBottom","window","innerWidth","display","gap","createField","Input","width","marginRight","defaultValue","value","flexDirection","maxWidth","alignItems","followUsersI","unfollowUsersI","textAlign"],"sourceRoot":""}